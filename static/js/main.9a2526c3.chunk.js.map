{"version":3,"sources":["components/Button.js","components/DisplayQuestion.js","components/StartGame.js","components/Header.js","components/Card.js","questions.js","helpers.js","components/App.js","index.js"],"names":["Button","_ref","children","onClick","className","_ref$disabled","disabled","props","Object","objectWithoutProperties","react_default","a","createElement","data-key","DisplayQuestion","state","hasAnswer","handleClick","e","_this","setState","prevState","target","classList","contains","handleAnswer","dataset","key","loadNewQuestion","_this2","this","buttons","question","title","answers","map","answer","components_Button","concat","correctAnswer","value","Component","StartGame","quizMeta","name","correctAnswers","desc","startGame","Header","Card","quizData","quizQuestions","isCorrect","generatorFromArray","shuffleArray","arr","Math","random","sort","b","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","val","regenerator_default","wrap","_context","prev","next","undefined","Symbol","iterator","done","t0","return","finish","stop","_marked","App","initialQuestions","questions","createGame","filter","generatedSet","length","currentQuestion","answerKey","components_Header","components_Card","components_DisplayQuestion","components_StartGame","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.9a2526c3.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Button({ children, onClick, className, disabled = false, ...props }) {\n  return (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled}\n      data-key={props[\"data-key\"]}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  \"data-key\": PropTypes.string\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport Button from \"./Button\";\nimport PropTypes from \"prop-types\";\n\nclass DisplayQuestion extends Component {\n  state = {\n    hasAnswer: false\n  };\n\n  handleClick = e => {\n    this.setState(prevState => {\n      return { hasAnswer: !prevState.hasAnswer };\n    });\n    if (e.target.classList.contains(\"answer\")) {\n      this.props.handleAnswer(e.target.dataset.key);\n    } else if (e.target.classList.contains(\"next\")) {\n      this.props.loadNewQuestion();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"question-wrapper\" onClick={this.buttons}>\n        <div className=\"question\">\n          <h2 className=\"question__title\">{this.props.question.title}</h2>\n\n          <div className=\"question__answers\">\n            {this.props.question.answers.map(answer => {\n              return (\n                <Button\n                  disabled={this.state.hasAnswer}\n                  className={`answer ${\n                    this.state.hasAnswer\n                      ? answer.key === this.props.question.correctAnswer\n                        ? \"isCorrect\"\n                        : \"isIncorrect\"\n                      : \"\"\n                  }`}\n                  key={answer.key}\n                  data-key={answer.key}\n                  onClick={this.handleClick}\n                >\n                  {answer.value}\n                </Button>\n              );\n            })}\n          </div>\n        </div>\n        {this.state.hasAnswer && (\n          <Button onClick={this.handleClick} className=\"next\">\n            Next Question\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nDisplayQuestion.propTypes = {\n  handleAnswer: PropTypes.func.isRequired,\n  loadNewQuestion: PropTypes.func.isRequired,\n  question: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    answers: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired\n      }).isRequired\n    ),\n    correctAnswer: PropTypes.string.isRequired,\n    isCorrect: PropTypes.bool.isRequired\n  }).isRequired\n};\nexport default DisplayQuestion;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass StartGame extends Component {\n  render() {\n    return (\n      <div className=\"start-game\">\n        <h1>{this.props.quizMeta.name}</h1>\n\n        <h2>\n          {this.props.correctAnswers === 0 ? (\n            <p>{this.props.quizMeta.desc}</p>\n          ) : (\n            `You got ${this.props.correctAnswers} questions correct!`\n          )}\n        </h2>\n        <button onClick={this.props.startGame}>\n          {this.props.correctAnswers === 0 ? \"Start The Game\" : \"Retry\"}\n        </button>\n      </div>\n    );\n  }\n}\n\nStartGame.propTypes = {\n  quizMeta: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    desc: PropTypes.string\n  }).isRequired,\n  correctAnswers: PropTypes.number.isRequired\n};\n\nexport default StartGame;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"siteHeader\">\n        <h1 className=\"siteTitle\">React Quiz Game</h1>\n        <p className=\"siteSubtitle\">\n          {this.props.correctAnswers} question\n          {this.props.correctAnswers !== 1 ? \"s\" : \"\"} guessed correctly\n        </p>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  correctAnswers: PropTypes.number.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\">\n      <section className=\"cardContents\">{props.children}</section>\n    </div>\n  );\n}\n\nexport default Card;\n","//https://www.sporcle.com/games/wevegotmoviesign/thats-what-she-said\n\nconst quizData = {\n  quizMeta: {\n    name: \"The Office Trivia\",\n    desc: \"Test your Office knowledge!\"\n  },\n  quizQuestions: [\n    {\n      title: \"Which of the following is Holly Flax's full first name?\",\n      answers: [\n        { key: \"a1\", value: \"Hollis\" },\n        { key: \"a2\", value: \"Hollison\" },\n        { key: \"a3\", value: \"Holland\" },\n        { key: \"a4\", value: \"Helene\" }\n      ],\n      correctAnswer: \"a1\",\n      isCorrect: false\n    },\n    {\n      title:\n        \"Meredith claims she was working on a degree in what field during the years the documentary crew was filming her?\",\n      answers: [\n        { key: \"a1\", value: \"School Psychology\" },\n        { key: \"a2\", value: \"Addiction Counseling\" },\n        { key: \"a3\", value: \"Business Ethics\" },\n        { key: \"a4\", value: \"Women's Studies\" }\n      ],\n      correctAnswer: \"a1\",\n      isCorrect: false\n    },\n    {\n      title:\n        \"Which character has NEVER been the chair of the party planning committee?\",\n      answers: [\n        { key: \"a1\", value: \"Kelly\" },\n        { key: \"a2\", value: \"Angela\" },\n        { key: \"a3\", value: \"Dwight\" },\n        { key: \"a4\", value: \"Phyllis\" }\n      ],\n      correctAnswer: \"a1\",\n      isCorrect: false\n    },\n    {\n      title: \"What is Kelly Kapoor's middle name?\",\n      answers: [\n        { key: \"a1\", value: \"Rajnigandha\" },\n        { key: \"a2\", value: \"Kaustubh\" },\n        { key: \"a3\", value: \"Prajeet\" },\n        { key: \"a4\", value: \"Erin\" }\n      ],\n      correctAnswer: \"a1\",\n      isCorrect: false\n    }\n  ]\n};\n\nexport default quizData;\n","function shuffleArray(arr) {\n  return arr\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n}\n\nfunction* generatorFromArray(arr) {\n  for (const val of arr) {\n    yield val;\n  }\n}\n\nexport { shuffleArray, generatorFromArray };\n","import React, { Component } from \"react\";\nimport DisplayQuestion from \"./DisplayQuestion\";\nimport StartGame from \"./StartGame\";\nimport Header from \"./Header\";\nimport Card from \"./Card\";\nimport quizData from \"../questions\";\nimport { shuffleArray, generatorFromArray } from \"../helpers\";\n\nclass App extends Component {\n  state = {\n    correctAnswers: 0,\n    //QUESTION: is it a bad practice to copy my questions into state twice so I can keep an unmutated copy?\n    initialQuestions: quizData.quizQuestions,\n    questions: quizData.quizQuestions,\n    quizMeta: quizData.quizMeta\n  };\n\n  //initializing an empty property here so that it can later be assigned to the real generated set\n  generatedSet;\n\n  startGame = () => {\n    const createGame = () => {\n      const questions = shuffleArray(\n        this.state.questions.filter(question => question.isCorrect === false)\n      );\n      //creating the new set and loading the next question has to be a callback since setState is async\n      //Is it a bad practice to use a setState callback instead of componentDidUpdate? I used a callback since this function is so compact I don't think it makes sense to move parts of it to a separate place\n      this.setState({ questions }, () => {\n        this.generatedSet = generatorFromArray(this.state.questions);\n        this.loadNewQuestion();\n      });\n    };\n\n    if (this.state.correctAnswers === quizData.quizQuestions.length) {\n      debugger;\n      const questions = this.state.initialQuestions;\n      questions.map(question => (question.isCorrect = false));\n      const correctAnswers = 0;\n      this.setState(\n        {\n          correctAnswers,\n          questions\n        },\n        createGame()\n      );\n    } else {\n      createGame();\n    }\n  };\n\n  loadNewQuestion = () => {\n    const currentQuestion = this.generatedSet.next().value;\n    if (currentQuestion) {\n      currentQuestion.answers = shuffleArray(currentQuestion.answers);\n    }\n    //Is it bad to define new pieces of state mid-app. The problem is that if I define currentQuestion in initial state it returns '{}' instead of undefined, and in DisplayQuestion I check to see if a currentQuestion exists before rendering. And if I use Object.keys(...).length I run into trouble because when the last question is finished it will completely remove currentQuestion from state instead of just emptying the object.\n    this.setState({ currentQuestion });\n  };\n\n  handleAnswer = answerKey => {\n    const currentQuestion = this.state.currentQuestion;\n    if (answerKey === this.state.currentQuestion.correctAnswer) {\n      currentQuestion.isCorrect = true;\n      this.setState(prevState => {\n        return { correctAnswers: prevState.correctAnswers + 1 };\n      });\n    }\n    this.setState({ currentQuestion });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header correctAnswers={this.state.correctAnswers} />\n\n        <Card>\n          {this.state.currentQuestion ? (\n            <DisplayQuestion\n              question={this.state.currentQuestion}\n              handleAnswer={this.handleAnswer}\n              isCorrect={this.state.currentQuestion.isCorrect}\n              loadNewQuestion={this.loadNewQuestion}\n            />\n          ) : (\n            <StartGame\n              correctAnswers={this.state.correctAnswers}\n              startGame={this.startGame}\n              quizMeta={this.state.quizMeta}\n            />\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./css/styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}